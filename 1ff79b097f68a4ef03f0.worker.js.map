{"version":3,"sources":["../webpack/bootstrap","../node_modules/url/url.js","../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../node_modules/webpack/buildin/module.js","../node_modules/webpack/buildin/global.js","../node_modules/url/util.js","../node_modules/querystring-es3/index.js","../node_modules/querystring-es3/decode.js","../node_modules/querystring-es3/encode.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","matrix.ts","data/index.ts","data/mnist.ts","network/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","random.ts","network/utils.ts","network/networks/ch3softmaxCrossEntropyL2Momentum.ts","network/networkFactory.ts","workerMessages.ts","networkSerializer.ts","workers/networkTester.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","punycode","require","util","Url","this","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","parse","urlParse","resolve","source","relative","resolveObject","format","obj","isString","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","url","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","indexOf","splitter","uSplit","split","replace","rest","join","trim","length","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","atSign","hostEnd","hec","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","toASCII","h","ae","esc","encodeURIComponent","escape","qm","keys","stringify","charAt","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","root","nodeType","freeGlobal","global","window","self","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","mapDomain","string","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","decode","input","out","basic","index","oldi","w","baseMinusT","codePoint","inputLength","bias","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","test","define","webpackPolyfill","deprecate","paths","children","g","Function","e","arg","prop","qs","sep","eq","options","regexp","maxKeys","len","kstr","vstr","x","idx","isArray","Array","xs","toString","stringifyPrimitive","isFinite","undefined","objectKeys","ks","f","res","_arrayLikeToArray","arr","arr2","_unsupportedIterableToArray","minLen","constructor","from","_slicedToArray","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","_toConsumableArray","iter","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","Matrix","rows","columns","data","Float64Array","size","random","initializer","some","row","Error","JSON","flat","entries","thisData","outData","outSize","other","subtractInto","clone","otherData","multiplyInto","zeros","thisRows","otherColumns","thisColumns","outColumns","thisR","otherC","dot","thisC","transposeInto","applyElementwiseInto","thisSize","max","Infinity","sum","decimals","entryStrings","rowMajorOrderEntries","entry","toFixed","entryStringLengths","maxLength","topAndBottomBorder","repeat","str","leftpad","minLength","fillCharacter","diff","Idx3FileFormat","offset","requiredValue","Idx1FileFormat","getLabeledImages","imagesBuffer","labelsBuffer","images","buffer","bytes","Uint8Array","actual","getInt32MsbFirst","expected","assertIdx3MagicNumberIsCorrect","numberOfImages","imagesParsed","firstPixelIndex","vectorEntries","matrix","columnVector","getImages","labels","assertIdx1MagicNumberIsCorrect","numberOfLabels","firstLabelIndex","getLabels","labeledImages","inputs","label","convertLabelToVector","image","fill","outputs","location","TRAINING_IMAGES_URL","TRAINING_LABELS_URL","TEST_IMAGES_URL","TEST_LABELS_URL","trainingImagesProm","getArrayBuffer","trainingLabelsProm","testImagesProm","testLabelsProm","fetch","then","response","status","arrayBuffer","statusText","text","getErrorMessage","errorMessage","Promise","reject","WeightInitializationMethod","mnistProm","all","trainingImagesBuffer","trainingLabelsBuffer","testImagesBuffer","testLabelsBuffer","training","_createForOfIteratorHelper","F","it","normalCompletion","didErr","step","_e2","uniformRandom","normalRandom","mean","variance","u1","u2","z1","sqrt","log","cos","PI","divideIntoMiniBatches","trainingData","miniBatchSize","exclMax","temp","shuffle","miniBatches","argmax","maxIndex","Chapter3SoftmaxCrossEntropyL2NetworkMomentum","weights","biases","numberOfLayers","weightVelocities","biasVelocities","temp_totalWeightGradients","temp_totalBiasGradients","temp_weightedSums","temp_activations","temp_errors","temp_weightGradients","temp_biasGradients","temp_transposedActivations","temp_weightCosts","temp_transposedWeights","temp_sigmaPrimeOfWeightedSums","layerSizes","getZeroMatrixMap","weightedSums","activations","outputLayer","transposedActivations","transposedWeights","initializationMethod","inputLayer","outputLayerSize","inputLayerSize","method","Uniform","LargeGaussian","SmallGaussian","initializeWeights","hyperParams","testData","batchSize","epochs","learningRate","momentumCoefficient","trainingDataSize","epoch","miniBatch","getTotalGradients","regularizationRate","weightGradients","biasGradients","mutMultiplyScalar","mutSubtract","mutAdd","accuracyRate","resetTotalGradientTemps","totalWeightGradients","totalBiasGradients","getGradients","setToZero","performForwardPass","lastLayerError","multiplyScalarInto","copyInto","mutHadamard","sigmaPrime","lastLayer","sigma","weightedSum","lastActivation","subtractScalarInto","maxEntry","exp","sumOfEntries","correctClassifications","correct","total","z","sigmaZ","zeroMatrices","WorkerMessageType","networkFactory","fromWeightsAndBiases","toArray","floats","addEventListener","event","message","network","Uint32Array","BYTES_PER_ELEMENT","cursor","fromRowMajorOrderEntries","subarray","deserializeNetwork","networkBuffer","mnist","messageType","TestCompleteNotification","postMessage","notifyListenersOfTestCompletion","startTesting","startTestingOnceMnistLoads"],"mappings":"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","file":"1ff79b097f68a4ef03f0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export class Matrix {\n  /** @deprecated Use `Matrix.fromEntryInitializer(rows, columns, uniformRng)` instead. */\n  static randomUniform(rows: number, columns: number): Matrix {\n    const size = rows * columns;\n    const data = new Float64Array(size);\n    for (let i = 0; i < size; i++) {\n      data[i] = Math.random() * 2 - 1;\n    }\n    return new Matrix(rows, columns, data);\n  }\n\n  static fromEntryInitializer(\n    rows: number,\n    columns: number,\n    initializer: () => number\n  ) {\n    const data = new Float64Array(rows * columns).map(initializer);\n    return new Matrix(rows, columns, data);\n  }\n\n  static zeros(rows: number, columns: number): Matrix {\n    const data = new Float64Array(rows * columns);\n    return new Matrix(rows, columns, data);\n  }\n\n  static fromRows(rows: number[][]): Matrix {\n    const columns = rows[0].length;\n    if (rows.some((row) => row.length !== columns)) {\n      throw new Error(\n        \"Cannot create a matrix from a jagged array: \" + JSON.stringify(rows)\n      );\n    }\n\n    return new Matrix(rows.length, columns, rows.flat());\n  }\n\n  static columnVector(entries: number[]): Matrix {\n    return new Matrix(entries.length, 1, entries);\n  }\n\n  static fromRowMajorOrderEntries(\n    rows: number,\n    columns: number,\n    entries: ArrayLike<number>\n  ): Matrix {\n    if (entries.length !== rows * columns) {\n      throw new Error(\n        \"Expected \" +\n          rows * columns +\n          \" entries but instead got \" +\n          entries.length +\n          \".\"\n      );\n    }\n\n    return new Matrix(rows, columns, entries);\n  }\n\n  public readonly rows: number;\n  public readonly columns: number;\n  private data: Float64Array;\n\n  private constructor(rows: number, columns: number, data: ArrayLike<number>) {\n    this.rows = rows;\n    this.columns = columns;\n    this.data = data instanceof Float64Array ? data : Float64Array.from(data);\n  }\n\n  clone(): Matrix {\n    return new Matrix(this.rows, this.columns, this.data.slice());\n  }\n\n  mutMultiplyScalar(n: number): this {\n    const size = this.data.length;\n    for (let i = 0; i < size; i++) {\n      this.data[i] *= n;\n    }\n    return this;\n  }\n\n  multiplyScalarInto(n: number, out: Matrix): Matrix {\n    if (!(this.rows === out.rows && this.columns === out.columns)) {\n      throw new Error(\n        \"Cannot multiply a scalar \" +\n          n +\n          \" by a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix. The out matrix must have the same dimensions as this matrix.\"\n      );\n    }\n\n    const thisData = this.data;\n    const outData = out.data;\n    const outSize = outData.length;\n    for (let i = 0; i < outSize; i++) {\n      outData[i] = n * thisData[i];\n    }\n    return out;\n  }\n\n  mutAdd(other: Matrix): this {\n    if (!(other.rows === this.rows && other.columns === this.columns)) {\n      throw new TypeError(\n        \"Cannot add a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" to a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix.\"\n      );\n    }\n\n    const size = this.data.length;\n    for (let i = 0; i < size; i++) {\n      this.data[i] += other.data[i];\n    }\n\n    return this;\n  }\n\n  mutSubtract(other: Matrix): this {\n    if (!(other.rows === this.rows && other.columns === this.columns)) {\n      throw new TypeError(\n        \"Cannot add a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" to a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix.\"\n      );\n    }\n\n    const size = this.data.length;\n    for (let i = 0; i < size; i++) {\n      this.data[i] -= other.data[i];\n    }\n\n    return this;\n  }\n\n  immutSubtract(other: Matrix): Matrix {\n    return this.subtractInto(other, this.clone());\n  }\n\n  subtractInto(other: Matrix, out: Matrix): Matrix {\n    if (!(other.rows === this.rows && other.columns === this.columns)) {\n      throw new TypeError(\n        \"Cannot subtract a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix from a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix.\"\n      );\n    }\n\n    if (!(this.rows === out.rows && this.columns === out.columns)) {\n      throw new TypeError(\n        \"Cannot subtract a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix from a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix. The source matrix and destination matrix must have the same dimensions.\"\n      );\n    }\n\n    const thisData = this.data;\n    const otherData = other.data;\n    const outData = out.data;\n    const outSize = outData.length;\n    for (let i = 0; i < outSize; i++) {\n      outData[i] = thisData[i] - otherData[i];\n    }\n    return out;\n  }\n\n  subtractScalarInto(n: number, out: Matrix): Matrix {\n    if (!(this.rows === out.rows && this.columns === out.columns)) {\n      throw new TypeError(\n        \"Cannot subtract a scalar from a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix. MThe source matrix and destination matrix must have the same dimensions.\"\n      );\n    }\n\n    const thisData = this.data;\n    const outData = out.data;\n    const outSize = outData.length;\n    for (let i = 0; i < outSize; i++) {\n      outData[i] = thisData[i] - n;\n    }\n    return out;\n  }\n\n  immutMultiply(other: Matrix): Matrix {\n    return this.multiplyInto(other, Matrix.zeros(this.rows, other.columns));\n  }\n\n  multiplyInto(other: Matrix, out: Matrix): Matrix {\n    if (this.columns !== other.rows) {\n      throw new TypeError(\n        \"Cannot multiply a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix with a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix.\"\n      );\n    }\n\n    if (!(this.rows === out.rows && other.columns === out.columns)) {\n      throw new TypeError(\n        \"Cannot multiply a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix with a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix.\"\n      );\n    }\n\n    const thisData = this.data;\n    const otherData = other.data;\n    const outData = out.data;\n    const thisRows = this.rows;\n    const otherColumns = other.columns;\n    const thisColumns = this.columns;\n    const outColumns = out.columns;\n\n    for (let thisR = 0; thisR < thisRows; thisR++) {\n      for (let otherC = 0; otherC < otherColumns; otherC++) {\n        let dot = 0;\n        for (let thisC = 0; thisC < thisColumns; thisC++) {\n          dot +=\n            thisData[thisR * thisColumns + thisC] *\n            otherData[thisC * otherColumns + otherC];\n        }\n        outData[thisR * outColumns + otherC] = dot;\n      }\n    }\n    return out;\n  }\n\n  mutHadamard(other: Matrix): this {\n    if (!(other.rows === this.rows && other.columns === this.columns)) {\n      throw new TypeError(\n        \"Cannot take the Hadamard product of a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix and a \" +\n          other.rows +\n          \"x\" +\n          other.columns +\n          \" matrix.\"\n      );\n    }\n\n    const size = this.data.length;\n    for (let i = 0; i < size; i++) {\n      this.data[i] *= other.data[i];\n    }\n    return this;\n  }\n\n  immutTranspose(): Matrix {\n    return this.transposeInto(\n      new Matrix(this.columns, this.rows, new Float64Array(this.data.length))\n    );\n  }\n\n  transposeInto(out: Matrix): Matrix {\n    if (!(this.rows === out.columns && this.columns === out.rows)) {\n      throw new Error(\n        \"Cannot transpose a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix.\"\n      );\n    }\n\n    const thisData = this.data;\n    const thisRows = this.rows;\n    const thisColumns = this.columns;\n    const outData = out.data;\n    const outColumns = out.columns;\n\n    for (let r = 0; r < thisRows; r++) {\n      for (let c = 0; c < thisColumns; c++) {\n        outData[c * outColumns + r] = thisData[r * thisColumns + c];\n      }\n    }\n    return out;\n  }\n\n  rowMajorOrderEntries(): ArrayLike<number> {\n    return this.data;\n  }\n\n  immutApplyElementwise(f: (entry: number) => number): Matrix {\n    return this.applyElementwiseInto(f, this.clone());\n  }\n\n  applyElementwiseInto(f: (entry: number) => number, out: Matrix): Matrix {\n    if (!(this.rows === out.rows && this.columns === out.columns)) {\n      throw new TypeError(\n        \"Cannot apply \" +\n          f.name +\n          \" elementwise on a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix. Matrices must have the same dimensions.\"\n      );\n    }\n\n    const thisData = this.data;\n    const outData = out.data;\n    const outSize = outData.length;\n    for (let i = 0; i < outSize; i++) {\n      outData[i] = f(thisData[i]);\n    }\n    return out;\n  }\n\n  copyInto(out: Matrix): Matrix {\n    if (!(this.rows === out.rows && this.columns === out.columns)) {\n      throw new Error(\n        \"Cannot copy a \" +\n          this.rows +\n          \"x\" +\n          this.columns +\n          \" matrix into a \" +\n          out.rows +\n          \"x\" +\n          out.columns +\n          \" matrix.\"\n      );\n    }\n\n    const thisData = this.data;\n    const outData = out.data;\n    const outSize = outData.length;\n    for (let i = 0; i < outSize; i++) {\n      outData[i] = thisData[i];\n    }\n    return out;\n  }\n\n  setToZero(): void {\n    const thisData = this.data;\n    const thisSize = thisData.length;\n    for (let i = 0; i < thisSize; i++) {\n      thisData[i] = 0;\n    }\n  }\n\n  maxEntry(): number {\n    let max = -Infinity;\n    const thisData = this.data;\n    const thisSize = thisData.length;\n    for (let i = 0; i < thisSize; i++) {\n      const v = thisData[i];\n      if (v > max) {\n        max = v;\n      }\n    }\n    return max;\n  }\n\n  sumOfEntries(): number {\n    let sum = 0;\n    const thisData = this.data;\n    const thisSize = thisData.length;\n    for (let i = 0; i < thisSize; i++) {\n      sum += thisData[i];\n    }\n    return sum;\n  }\n\n  print(decimals: number): string {\n    const entries = Array.from(this.rowMajorOrderEntries());\n    const entryStrings = entries.map((entry) => entry.toFixed(decimals));\n    const entryStringLengths = entryStrings.map((s) => s.length);\n    const maxLength = Math.max(...entryStringLengths);\n\n    const topAndBottomBorder = \"-\".repeat(\n      this.columns * (maxLength + \" | \".length) - \" | \".length\n    );\n\n    let str = topAndBottomBorder + \"\\n\";\n\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.columns; c++) {\n        str +=\n          leftpad(entryStrings[r * this.columns + c], maxLength, \" \") + \" | \";\n      }\n\n      str = str.slice(0, -\" | \".length);\n\n      str += \"\\n\";\n    }\n\n    str += topAndBottomBorder;\n    return str;\n  }\n}\n\nfunction leftpad(s: string, minLength: number, fillCharacter: string): string {\n  const diff = minLength - s.length;\n  if (diff <= 0) {\n    return s;\n  }\n\n  return fillCharacter.repeat(diff) + s;\n}\n","import { Matrix } from \"../matrix\";\n\nexport interface LabeledImage {\n  rows: number;\n  columns: number;\n  inputs: Matrix;\n  label: number;\n}\n\nexport interface VectorLabeledImage {\n  rows: number;\n  columns: number;\n  inputs: Matrix;\n  outputs: Matrix;\n}\n\ninterface ImageMatrix {\n  rows: number;\n  columns: number;\n  matrix: Matrix;\n}\n\nexport interface AccuracyRate {\n  correct: number;\n  total: number;\n}\n\nconst Idx3FileFormat = {\n  MagicNumber: { offset: 0, requiredValue: 0x00000803 },\n  NumberOfImages: { offset: 4 },\n  NumberOfRows: { offset: 8 },\n  NumberOfColumns: { offset: 12 },\n} as const;\n\nconst Idx1FileFormat = {\n  MagicNumber: { offset: 0, requiredValue: 0x00000801 },\n  NumberOfLabels: { offset: 4 },\n} as const;\n\nexport function getLabeledImages(\n  imagesBuffer: ArrayBuffer,\n  labelsBuffer: ArrayBuffer\n): LabeledImage[] {\n  const images = getImages(imagesBuffer);\n  const labels = getLabels(labelsBuffer);\n\n  if (images.length !== labels.length) {\n    throw new Error(\n      \"There are \" +\n        images.length +\n        \" images, but \" +\n        labels.length +\n        \" labels. There must be the same amount of images and labels.\"\n    );\n  }\n\n  const labeledImages: LabeledImage[] = new Array(images.length);\n  for (let i = 0; i < images.length; i++) {\n    const { rows, columns, matrix } = images[i];\n    labeledImages[i] = { rows, columns, inputs: matrix, label: labels[i] };\n  }\n  return labeledImages;\n}\n\nfunction getImages(buffer: ArrayBuffer): ImageMatrix[] {\n  const bytes = new Uint8Array(buffer);\n\n  assertIdx3MagicNumberIsCorrect(bytes);\n\n  const numberOfImages = getInt32MsbFirst(\n    bytes,\n    Idx3FileFormat.NumberOfImages.offset\n  );\n  const rows = getInt32MsbFirst(bytes, Idx3FileFormat.NumberOfRows.offset);\n  const columns = getInt32MsbFirst(\n    bytes,\n    Idx3FileFormat.NumberOfColumns.offset\n  );\n  const size = rows * columns;\n\n  let imagesParsed = 0;\n  const images: ImageMatrix[] = new Array(numberOfImages);\n  const firstPixelIndex = Idx3FileFormat.NumberOfColumns.offset + 4;\n\n  while (imagesParsed < numberOfImages) {\n    const vectorEntries: number[] = new Array(size);\n    for (let j = 0; j < size; j++) {\n      vectorEntries[j] = bytes[firstPixelIndex + imagesParsed * size + j] / 255;\n    }\n\n    images[imagesParsed] = {\n      rows,\n      columns,\n      matrix: Matrix.columnVector(vectorEntries),\n    };\n    imagesParsed++;\n  }\n\n  return images;\n}\n\nfunction assertIdx3MagicNumberIsCorrect(bytes: Uint8Array): void {\n  const actual = getInt32MsbFirst(bytes, Idx3FileFormat.MagicNumber.offset);\n  const expected = Idx3FileFormat.MagicNumber.requiredValue;\n  if (actual !== expected) {\n    throw new Error(\n      \"The first 4 bytes of an idx3 file must be 0x\" +\n        expected.toString(16) +\n        \", but the first 4 bytes of the provided file were 0x\" +\n        actual.toString(16)\n    );\n  }\n}\n\nfunction getInt32MsbFirst(bytes: Uint8Array, offset: number): number {\n  return (\n    (bytes[offset] << 24) |\n    (bytes[offset + 1] << 16) |\n    (bytes[offset + 2] << 8) |\n    bytes[offset + 3]\n  );\n}\n\nfunction getLabels(buffer: ArrayBuffer): number[] {\n  const bytes = new Uint8Array(buffer);\n\n  assertIdx1MagicNumberIsCorrect(bytes);\n\n  const numberOfLabels = getInt32MsbFirst(\n    bytes,\n    Idx1FileFormat.NumberOfLabels.offset\n  );\n  const labels: number[] = new Array(numberOfLabels);\n  const firstLabelIndex = Idx1FileFormat.NumberOfLabels.offset + 4;\n  for (let i = 0; i < numberOfLabels; i++) {\n    labels[i] = bytes[firstLabelIndex + i];\n  }\n  return labels;\n}\n\nfunction assertIdx1MagicNumberIsCorrect(bytes: Uint8Array): void {\n  const actual = getInt32MsbFirst(bytes, Idx1FileFormat.MagicNumber.offset);\n  const expected = Idx1FileFormat.MagicNumber.requiredValue;\n  if (actual !== expected) {\n    throw new Error(\n      \"The first 4 bytes of an idx1 file must be 0x\" +\n        expected.toString(16) +\n        \", but the first 4 bytes of the provided file were 0x\" +\n        actual.toString(16)\n    );\n  }\n}\n\nexport function convertLabelToVector(image: LabeledImage): VectorLabeledImage {\n  const entries: number[] = new Array(10).fill(0);\n  entries[image.label] = 1;\n  const outputs = Matrix.columnVector(entries);\n  return {\n    rows: image.rows,\n    columns: image.columns,\n    inputs: image.inputs,\n    outputs,\n  };\n}\n\nexport function convertVectorToLabel(image: VectorLabeledImage): LabeledImage {\n  return {\n    rows: image.rows,\n    columns: image.columns,\n    inputs: image.inputs,\n    label: getLabel(image),\n  };\n}\n\nfunction getLabel(image: VectorLabeledImage): number {\n  const entries = image.outputs.rowMajorOrderEntries();\n  for (let i = 0; i < entries.length; i++) {\n    if (entries[i] === 1) {\n      return i;\n    }\n  }\n  throw new Error(\"A VectorLabeledImage has an output vector without a 1.\");\n}\n","import url from \"url\";\nimport {\n  convertLabelToVector,\n  getLabeledImages,\n  LabeledImage,\n  VectorLabeledImage,\n} from \".\";\n\nexport interface MnistData {\n  training: VectorLabeledImage[];\n  test: LabeledImage[];\n}\n\ndeclare const self: { location: Window[\"location\"] };\n\nconst { location } = self;\n\nconst TRAINING_IMAGES_URL = url.resolve(\n  location.href,\n  \"./assets/train60k-images-idx3-ubyte\"\n);\nconst TRAINING_LABELS_URL = url.resolve(\n  location.href,\n  \"./assets/train60k-labels-idx1-ubyte\"\n);\nconst TEST_IMAGES_URL = url.resolve(\n  location.href,\n  \"./assets/test10k-images-idx3-ubyte\"\n);\nconst TEST_LABELS_URL = url.resolve(\n  location.href,\n  \"./assets/test10k-labels-idx1-ubyte\"\n);\nconst trainingImagesProm: Promise<ArrayBuffer> = getArrayBuffer(\n  TRAINING_IMAGES_URL\n);\nconst trainingLabelsProm: Promise<ArrayBuffer> = getArrayBuffer(\n  TRAINING_LABELS_URL\n);\nconst testImagesProm: Promise<ArrayBuffer> = getArrayBuffer(TEST_IMAGES_URL);\nconst testLabelsProm: Promise<ArrayBuffer> = getArrayBuffer(TEST_LABELS_URL);\n\nfunction getArrayBuffer(url: string): Promise<ArrayBuffer> {\n  return fetch(url).then((response) => {\n    if (200 <= response.status && response.status <= 299) {\n      return response.arrayBuffer();\n    } else {\n      return getErrorMessage(response).then((errorMessage) =>\n        Promise.reject(\n          new Error(\n            \"Tried to fetch \" +\n              url +\n              \" but got the following error: \" +\n              errorMessage\n          )\n        )\n      );\n    }\n  });\n}\n\nfunction getErrorMessage(response: Response): Promise<string> {\n  const { status, statusText } = response;\n  return response\n    .text()\n    .then((text) => status + \" (\" + statusText + \"): \" + text);\n}\n\nexport const mnistProm: Promise<MnistData> = Promise.all([\n  trainingImagesProm,\n  trainingLabelsProm,\n  testImagesProm,\n  testLabelsProm,\n]).then(\n  ([\n    trainingImagesBuffer,\n    trainingLabelsBuffer,\n    testImagesBuffer,\n    testLabelsBuffer,\n  ]) => {\n    return {\n      training: getLabeledImages(\n        trainingImagesBuffer,\n        trainingLabelsBuffer\n      ).map(convertLabelToVector),\n      test: getLabeledImages(testImagesBuffer, testLabelsBuffer),\n    };\n  }\n);\n","import { LabeledImage, VectorLabeledImage, AccuracyRate } from \"../data\";\nimport { Matrix } from \"../matrix\";\nimport { DeepReadonly } from \"../deepReadonly\";\n\nexport interface Network {\n  readonly layerSizes: number[];\n\n  stochasticGradientDescent(\n    trainingData: VectorLabeledImage[],\n    hyperparams: StochasticGradientDescentHyperParameters,\n    evaluationData?: LabeledImage[]\n  ): void;\n\n  performForwardPass(inputColumnVector: Matrix): WeightedSumsAndActivations;\n\n  test(testData: LabeledImage[]): AccuracyRate;\n\n  getWeights(): DeepReadonly<MatrixMap>;\n\n  getBiases(): DeepReadonly<MatrixMap>;\n}\n\nexport interface WeightedSumsAndActivations {\n  weightedSums: MatrixMap;\n  activations: MatrixMap;\n}\n\n/**\n * `MatrixMap` differs from `ArrayLike<Matrix>` in that\n * indices start at `1`. Because the input layer (layer\n * `0`) does not have a weight matrix or bias matrix,\n * `MatrixMap[0]` will be undefined.\n */\nexport interface MatrixMap {\n  [layer: number]: Matrix;\n  length: number;\n}\n\nexport enum WeightInitializationMethod {\n  Uniform = \"Uniform\",\n  LargeGaussian = \"LargeGaussian\",\n  SmallGaussian = \"SmallGaussian\",\n}\n\nexport interface StochasticGradientDescentHyperParameters {\n  batchSize: number;\n  epochs: number;\n  learningRate: number;\n  regularizationRate: number;\n  momentumCoefficient: number;\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/** Generates a random float on the interval [-1, 1). */\nexport function uniformRandom(): number {\n  return Math.random() * 2 - 1;\n}\n\n// https://en.wikipedia.org/wiki/Box-Muller_transform\nexport function normalRandom(mean: number = 0, variance: number = 1): number {\n  let u1 = 0;\n  let u2 = 0;\n\n  // Convert [0,1) to (0,1)\n  while (u1 === 0) {\n    u1 = Math.random();\n  }\n  while (u2 === 0) {\n    u2 = Math.random();\n  }\n\n  const z1 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(2.0 * Math.PI * u2);\n  return variance * z1 + mean;\n}\n","import { MatrixMap, WeightInitializationMethod } from \".\";\nimport { VectorLabeledImage } from \"../data\";\nimport { uniformRandom, normalRandom } from \"../random\";\n\nexport interface Gradients {\n  weightGradients: MatrixMap;\n  biasGradients: MatrixMap;\n}\n\nexport function divideIntoMiniBatches(\n  trainingData: VectorLabeledImage[],\n  miniBatchSize: number\n): VectorLabeledImage[][] {\n  shuffle(trainingData);\n  const miniBatches: VectorLabeledImage[][] = [];\n  for (let i = 0; i < trainingData.length; i += miniBatchSize) {\n    miniBatches.push(trainingData.slice(i, i + miniBatchSize));\n  }\n  return miniBatches;\n}\n\nfunction shuffle(arr: unknown[]): void {\n  const SHUFFLE_TIMES = 512;\n\n  for (let n = 0; n < SHUFFLE_TIMES; n++) {\n    for (let i = arr.length - 1; i >= 1; i--) {\n      let j = randInt(i + 1);\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n}\n\nfunction randInt(exclMax: number): number {\n  return Math.floor(Math.random() * exclMax);\n}\n\nexport function argmax(arr: ArrayLike<number>): number {\n  let maxIndex = 0;\n  let max = arr[maxIndex];\n  for (let i = 1; i < arr.length; i++) {\n    const value = arr[i];\n    if (value > max) {\n      max = value;\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\nexport function initializeWeights(\n  method: WeightInitializationMethod,\n  weights: MatrixMap\n): void {\n  for (let i = 1; i < weights.length; i++) {\n    const matrix = weights[i];\n    const initializer: () => number = (() => {\n      switch (method) {\n        case WeightInitializationMethod.Uniform:\n          return uniformRandom;\n        case WeightInitializationMethod.LargeGaussian:\n          return () => normalRandom(0, 1);\n        case WeightInitializationMethod.SmallGaussian:\n          return () => normalRandom(0, 1 / Math.sqrt(matrix.columns));\n      }\n    })();\n    matrix.applyElementwiseInto(initializer, matrix);\n  }\n}\n","import {\n  MatrixMap,\n  Network,\n  StochasticGradientDescentHyperParameters,\n  WeightedSumsAndActivations,\n  WeightInitializationMethod,\n} from \"..\";\nimport { AccuracyRate, LabeledImage, VectorLabeledImage } from \"../../data\";\nimport { DeepReadonly } from \"../../deepReadonly\";\nimport { Matrix } from \"../../matrix\";\nimport {\n  argmax,\n  divideIntoMiniBatches,\n  Gradients,\n  initializeWeights,\n} from \"../utils\";\n\n/**\n * Categorical cross-entropy cost,\n * softmax activation in last layer,\n * all other layers use sigmoid activation function,\n * L2 regularization,\n * momentum\n */\nexport class Chapter3SoftmaxCrossEntropyL2NetworkMomentum implements Network {\n  private numberOfLayers: number;\n  private weights: MatrixMap;\n  private biases: MatrixMap;\n  private weightVelocities: MatrixMap;\n  private biasVelocities: MatrixMap;\n  private log: (accuracyRate: AccuracyRate, epoch: number) => void;\n\n  private temp_totalWeightGradients: MatrixMap;\n  private temp_totalBiasGradients: MatrixMap;\n\n  private temp_weightedSums: MatrixMap;\n  private temp_activations: MatrixMap;\n\n  private temp_errors: MatrixMap;\n  private temp_weightGradients: MatrixMap;\n  private temp_biasGradients: MatrixMap;\n  private temp_transposedActivations: MatrixMap;\n  private temp_weightCosts: MatrixMap;\n  private temp_transposedWeights: MatrixMap;\n  private temp_sigmaPrimeOfWeightedSums: MatrixMap;\n\n  public readonly layerSizes: number[];\n\n  static fromWeightsAndBiases(weights: MatrixMap, biases: MatrixMap): Network {\n    return new Chapter3SoftmaxCrossEntropyL2NetworkMomentum(weights, biases);\n  }\n\n  static fromLayerSizes(\n    layerSizes: number[],\n    initializationMethod: WeightInitializationMethod,\n    log?: (accuracyRate: AccuracyRate, epoch: number) => void\n  ): Network {\n    const numberOfLayers = layerSizes.length;\n\n    const weights: MatrixMap = new Array(numberOfLayers);\n    const biases: MatrixMap = new Array(numberOfLayers);\n    for (let outputLayer = 1; outputLayer < numberOfLayers; outputLayer++) {\n      const inputLayer = outputLayer - 1;\n      const outputLayerSize = layerSizes[outputLayer];\n      const inputLayerSize = layerSizes[inputLayer];\n      weights[outputLayer] = Matrix.zeros(outputLayerSize, inputLayerSize);\n      biases[outputLayer] = Matrix.zeros(outputLayerSize, 1);\n    }\n\n    initializeWeights(initializationMethod, weights);\n\n    return new Chapter3SoftmaxCrossEntropyL2NetworkMomentum(\n      weights,\n      biases,\n      log\n    );\n  }\n\n  private constructor(\n    weights: MatrixMap,\n    biases: MatrixMap,\n    log?: (accuracyRate: AccuracyRate, epoch: number) => void\n  ) {\n    const layerSizes = [weights[1].columns];\n    for (let i = 1; i < weights.length; i++) {\n      layerSizes.push(weights[i].rows);\n    }\n\n    this.layerSizes = layerSizes;\n    this.numberOfLayers = layerSizes.length;\n    this.weights = weights;\n    this.biases = biases;\n    this.weightVelocities = getZeroMatrixMap(weights);\n    this.biasVelocities = getZeroMatrixMap(biases);\n    this.log = log || (() => {});\n\n    this.temp_totalWeightGradients = getZeroMatrixMap(weights);\n    this.temp_totalBiasGradients = getZeroMatrixMap(biases);\n\n    {\n      const weightedSums = [];\n      const activations = [Matrix.zeros(weights[1].columns, 1)];\n\n      for (\n        let outputLayer = 1;\n        outputLayer < this.numberOfLayers;\n        outputLayer++\n      ) {\n        weightedSums[outputLayer] = Matrix.zeros(weights[outputLayer].rows, 1);\n        activations[outputLayer] = Matrix.zeros(weights[outputLayer].rows, 1);\n      }\n\n      this.temp_weightedSums = weightedSums;\n      this.temp_activations = activations;\n    }\n\n    this.temp_errors = getZeroMatrixMap(this.temp_weightedSums);\n    this.temp_weightGradients = getZeroMatrixMap(weights);\n    this.temp_biasGradients = getZeroMatrixMap(biases);\n\n    {\n      const activations = this.temp_activations;\n      const transposedActivations: MatrixMap = new Array(activations.length);\n\n      for (\n        let outputLayer = 0;\n        outputLayer < activations.length;\n        outputLayer++\n      ) {\n        transposedActivations[outputLayer] = Matrix.zeros(\n          activations[outputLayer].columns,\n          activations[outputLayer].rows\n        );\n      }\n\n      this.temp_transposedActivations = transposedActivations;\n    }\n\n    this.temp_weightCosts = getZeroMatrixMap(this.temp_weightGradients);\n\n    {\n      const { weights } = this;\n      const transposedWeights: MatrixMap = new Array(weights.length);\n      for (let i = 1; i < weights.length; i++) {\n        transposedWeights[i] = Matrix.zeros(\n          weights[i].columns,\n          weights[i].rows\n        );\n      }\n      this.temp_transposedWeights = transposedWeights;\n    }\n\n    this.temp_sigmaPrimeOfWeightedSums = getZeroMatrixMap(\n      this.temp_weightedSums\n    );\n  }\n\n  stochasticGradientDescent(\n    trainingData: VectorLabeledImage[],\n    hyperParams: StochasticGradientDescentHyperParameters,\n    testData?: LabeledImage[]\n  ): void {\n    const {\n      batchSize,\n      epochs,\n      learningRate,\n      momentumCoefficient,\n    } = hyperParams;\n    const trainingDataSize = trainingData.length;\n\n    for (let epoch = 0; epoch < epochs; epoch++) {\n      const miniBatches = divideIntoMiniBatches(trainingData, batchSize);\n      for (const miniBatch of miniBatches) {\n        const { weightGradients, biasGradients } = this.getTotalGradients(\n          miniBatch,\n          hyperParams.regularizationRate,\n          trainingDataSize\n        );\n\n        for (let i = 1; i < this.numberOfLayers; i++) {\n          weightGradients[i].mutMultiplyScalar(learningRate / miniBatch.length);\n          biasGradients[i].mutMultiplyScalar(learningRate / miniBatch.length);\n\n          this.weightVelocities[i]\n            .mutMultiplyScalar(momentumCoefficient)\n            .mutSubtract(weightGradients[i]);\n          this.biasVelocities[i]\n            .mutMultiplyScalar(momentumCoefficient)\n            .mutSubtract(biasGradients[i]);\n\n          this.weights[i].mutAdd(this.weightVelocities[i]);\n          this.biases[i].mutAdd(this.biasVelocities[i]);\n\n          //   this.weights[i].mutSubtract(weightGradients[i]);\n          //   this.biases[i].mutSubtract(biasGradients[i]);\n        }\n      }\n\n      if (testData !== undefined) {\n        const accuracyRate = this.test(testData);\n        this.log(accuracyRate, epoch);\n      }\n    }\n  }\n\n  private getTotalGradients(\n    miniBatch: VectorLabeledImage[],\n    regularizationRate: number,\n    trainingDataSize: number\n  ): Gradients {\n    const {\n      weightGradients: totalWeightGradients,\n      biasGradients: totalBiasGradients,\n    } = this.resetTotalGradientTemps();\n\n    for (const image of miniBatch) {\n      const { weightGradients, biasGradients } = this.getGradients(\n        image,\n        regularizationRate,\n        trainingDataSize\n      );\n      for (let i = 1; i < this.numberOfLayers; i++) {\n        totalWeightGradients[i].mutAdd(weightGradients[i]);\n        totalBiasGradients[i].mutAdd(biasGradients[i]);\n      }\n    }\n\n    return {\n      weightGradients: totalWeightGradients,\n      biasGradients: totalBiasGradients,\n    };\n  }\n\n  private resetTotalGradientTemps(): Gradients {\n    const numberOfLayers = this.layerSizes.length;\n    const weightGradients = this.temp_totalWeightGradients;\n    const biasGradients = this.temp_totalBiasGradients;\n    for (let i = 1; i < numberOfLayers; i++) {\n      weightGradients[i].setToZero();\n      biasGradients[i].setToZero();\n    }\n    return { weightGradients, biasGradients };\n  }\n\n  private getGradients(\n    image: VectorLabeledImage,\n    regularizationRate: number,\n    trainingDataSize: number\n  ): Gradients {\n    const { numberOfLayers } = this;\n\n    const { weightedSums, activations } = this.performForwardPass(image.inputs);\n    const errors = this.temp_errors;\n    const weightGradients = this.temp_weightGradients;\n    const biasGradients = this.temp_biasGradients;\n\n    const lastLayerError = activations[this.numberOfLayers - 1].subtractInto(\n      image.outputs,\n      errors[numberOfLayers - 1]\n    );\n\n    lastLayerError\n      .multiplyInto(\n        activations[numberOfLayers - 2].transposeInto(\n          this.temp_transposedActivations[numberOfLayers - 2]\n        ),\n        weightGradients[numberOfLayers - 1]\n      )\n      .mutAdd(\n        this.weights[numberOfLayers - 1].multiplyScalarInto(\n          regularizationRate / trainingDataSize,\n          this.temp_weightCosts[numberOfLayers - 1]\n        )\n      );\n\n    lastLayerError.copyInto(biasGradients[numberOfLayers - 1]);\n\n    for (let i = this.numberOfLayers - 2; i >= 1; i--) {\n      const error = this.weights[i + 1]\n        .transposeInto(this.temp_transposedWeights[i + 1])\n        .multiplyInto(errors[i + 1], errors[i])\n        .mutHadamard(\n          weightedSums[i].applyElementwiseInto(\n            sigmaPrime,\n            this.temp_sigmaPrimeOfWeightedSums[i]\n          )\n        );\n\n      error\n        .multiplyInto(\n          activations[i - 1].transposeInto(\n            this.temp_transposedActivations[i - 1]\n          ),\n          weightGradients[i]\n        )\n        .mutAdd(\n          this.weights[i].multiplyScalarInto(\n            regularizationRate / trainingDataSize,\n            this.temp_weightCosts[i]\n          )\n        );\n\n      error.copyInto(biasGradients[i]);\n    }\n\n    return { weightGradients, biasGradients };\n  }\n\n  performForwardPass(inputs: Matrix): WeightedSumsAndActivations {\n    const lastLayer = this.numberOfLayers - 1;\n\n    const weightedSums = this.temp_weightedSums;\n    const activations = this.temp_activations;\n\n    activations[0] = inputs;\n\n    for (let outputLayer = 1; outputLayer < lastLayer; outputLayer++) {\n      const inputLayer = outputLayer - 1;\n      const weightedSum = this.weights[outputLayer]\n        .multiplyInto(activations[inputLayer], weightedSums[outputLayer])\n        .mutAdd(this.biases[outputLayer]);\n      weightedSum.applyElementwiseInto(sigma, activations[outputLayer]);\n    }\n\n    {\n      const inputLayer = lastLayer - 1;\n      const weightedSum = this.weights[lastLayer]\n        .multiplyInto(activations[inputLayer], weightedSums[lastLayer])\n        .mutAdd(this.biases[lastLayer]);\n      const lastActivation = weightedSum\n        .subtractScalarInto(weightedSum.maxEntry(), activations[lastLayer])\n        .applyElementwiseInto(Math.exp, activations[lastLayer]);\n      lastActivation.mutMultiplyScalar(1 / lastActivation.sumOfEntries());\n    }\n\n    return { weightedSums, activations };\n  }\n\n  test(testData: LabeledImage[]): AccuracyRate {\n    let correctClassifications = 0;\n    for (const image of testData) {\n      const { activations } = this.performForwardPass(image.inputs);\n      const prediction = argmax(\n        activations[this.numberOfLayers - 1].rowMajorOrderEntries()\n      );\n      if (prediction === image.label) {\n        correctClassifications++;\n      }\n    }\n    return { correct: correctClassifications, total: testData.length };\n  }\n\n  getWeights(): DeepReadonly<MatrixMap> {\n    return this.weights;\n  }\n\n  getBiases(): DeepReadonly<MatrixMap> {\n    return this.biases;\n  }\n}\n\nfunction sigma(z: number): number {\n  return 1 / (1 + Math.exp(-z));\n}\n\nfunction sigmaPrime(z: number): number {\n  const sigmaZ = sigma(z);\n  return sigmaZ * (1 - sigmaZ);\n}\n\nfunction getZeroMatrixMap(map: MatrixMap): MatrixMap {\n  const zeroMatrices: MatrixMap = [];\n  for (let i = 1; i < map.length; i++) {\n    const matrix = map[i];\n    zeroMatrices[i] = Matrix.zeros(matrix.rows, matrix.columns);\n  }\n  return zeroMatrices;\n}\n","import { MatrixMap, Network, WeightInitializationMethod } from \".\";\nimport { Chapter3SoftmaxCrossEntropyL2NetworkMomentum } from \"./networks/ch3softmaxCrossEntropyL2Momentum\";\n\nexport interface NetworkFactory {\n  fromLayerSizes(\n    layerSizes: number[],\n    initializationMethod: WeightInitializationMethod\n  ): Network;\n  fromWeightsAndBiases(weights: MatrixMap, biases: MatrixMap): Network;\n}\n\n/**\n * At any given time, the entire web app uses one and only\n * one neural network implementation.\n *\n * All other files will depend on `networkFactory`, which will\n * allow me to easily change which network I'm using by changing\n * only one variable.\n * Otherwise, if I wanted to change from using `NetworkX`\n * to `NetworkY`, I would have to go through the entire src\n * folder and replace every occurrence of `NetworkX` with\n * `NetworkY`.\n */\nexport const networkFactory: NetworkFactory = {\n  fromLayerSizes(\n    layerSizes: number[],\n    initializationMethod: WeightInitializationMethod\n  ): Network {\n    return Chapter3SoftmaxCrossEntropyL2NetworkMomentum.fromLayerSizes(\n      layerSizes,\n      initializationMethod\n    );\n  },\n  fromWeightsAndBiases(weights: MatrixMap, biases: MatrixMap): Network {\n    return Chapter3SoftmaxCrossEntropyL2NetworkMomentum.fromWeightsAndBiases(\n      weights,\n      biases\n    );\n  },\n};\n","import { AccuracyRate } from \"./data\";\nimport { StochasticGradientDescentHyperParameters } from \"./network\";\n\nexport enum WorkerMessageType {\n  StartTrainingRequest,\n  TrainingEpochCompleteNotification,\n  TerminateTrainingRequest,\n  TerminateTrainingResponse,\n\n  StartTestingRequest,\n  TestCompleteNotification,\n}\n\nexport type NetworkTrainerRequest =\n  | StartTrainingRequest\n  | TerminateTrainingRequest;\n\nexport type NetworkTrainerNotification =\n  | TrainingEpochCompleteNotification\n  | TerminateTrainingResponse;\n\nexport interface StartTrainingRequest {\n  messageType: WorkerMessageType.StartTrainingRequest;\n\n  networkBuffer: ArrayBuffer;\n  hyperParams: StochasticGradientDescentHyperParameters;\n}\n\nexport interface TrainingEpochCompleteNotification {\n  messageType: WorkerMessageType.TrainingEpochCompleteNotification;\n\n  accuracyRate: AccuracyRate;\n  epoch: number;\n}\n\nexport interface TerminateTrainingRequest {\n  messageType: WorkerMessageType.TerminateTrainingRequest;\n}\n\nexport interface TerminateTrainingResponse {\n  messageType: WorkerMessageType.TerminateTrainingResponse;\n\n  networkBuffer: ArrayBuffer;\n}\n\nexport interface StartTestingRequest {\n  messageType: WorkerMessageType.StartTestingRequest;\n\n  networkBuffer: ArrayBuffer;\n}\n\nexport interface TestCompleteNotification {\n  messageType: WorkerMessageType.TestCompleteNotification;\n  accuracyRate: AccuracyRate;\n}\n","import { Matrix } from \"./matrix\";\nimport { MatrixMap, Network } from \"./network\";\nimport { networkFactory } from \"./network/networkFactory\";\n\nexport function serializeNetwork(network: Network): ArrayBuffer {\n  const entries = getEntries(network);\n\n  const numberOfBytesForSizes =\n    (1 + network.layerSizes.length) * Uint32Array.BYTES_PER_ELEMENT;\n\n  const buffer = new ArrayBuffer(\n    numberOfBytesForSizes + entries.length * entries.BYTES_PER_ELEMENT\n  );\n\n  const uints = new Uint32Array(\n    buffer,\n    0,\n    numberOfBytesForSizes / Uint32Array.BYTES_PER_ELEMENT\n  );\n\n  uints[0] = network.layerSizes.length;\n\n  for (let i = 0; i < network.layerSizes.length; i++) {\n    uints[1 + i] = network.layerSizes[i];\n  }\n\n  const floats = new Float64Array(entries);\n  putBuffer(floats.buffer, buffer, numberOfBytesForSizes);\n\n  return buffer;\n}\n\nfunction getEntries(network: Network): Float64Array {\n  const weights = network.getWeights();\n  const biases = network.getBiases();\n\n  let entryCount = 0;\n\n  for (let i = 1; i < weights.length; i++) {\n    const weightMatrix = weights[i];\n    const weightMatrixSize = weightMatrix.rows * weightMatrix.columns;\n    entryCount += weightMatrixSize;\n\n    const biasMatrix = biases[i];\n    const biasMatrixSize = biasMatrix.rows * biasMatrix.columns;\n    entryCount += biasMatrixSize;\n  }\n\n  const entries = new Float64Array(entryCount);\n\n  let cursor = 0;\n  for (let i = 1; i < weights.length; i++) {\n    const weightMatrixEntries = weights[i].rowMajorOrderEntries();\n    entries.set(weightMatrixEntries, cursor);\n    cursor += weightMatrixEntries.length;\n\n    const biasMatrixEntries = biases[i].rowMajorOrderEntries();\n    entries.set(biasMatrixEntries, cursor);\n    cursor += biasMatrixEntries.length;\n  }\n\n  return entries;\n}\n\nfunction putBuffer(\n  src: ArrayBuffer,\n  dest: ArrayBuffer,\n  byteOffset: number = 0\n): void {\n  const srcU8s = new Uint8Array(src);\n  const destU8s = new Uint8Array(dest);\n  for (let i = 0; i < srcU8s.length; i++) {\n    destU8s[byteOffset + i] = srcU8s[i];\n  }\n}\n\nexport function deserializeNetwork(buffer: ArrayBuffer): Network {\n  const numberOfLayers = new Uint32Array(buffer, 0, 1)[0];\n  const layerSizes = new Uint32Array(buffer, 4, numberOfLayers);\n  const entries = new Float64Array(\n    buffer.slice(Uint32Array.BYTES_PER_ELEMENT * (1 + numberOfLayers))\n  );\n\n  const weights: MatrixMap = [];\n  const biases: MatrixMap = [];\n\n  let cursor = 0;\n  for (let i = 1; i < layerSizes.length; i++) {\n    const outputLayerSize = layerSizes[i];\n    const inputLayerSize = layerSizes[i - 1];\n\n    {\n      const rows = outputLayerSize;\n      const columns = inputLayerSize;\n      const size = rows * columns;\n      weights[i] = Matrix.fromRowMajorOrderEntries(\n        rows,\n        columns,\n        toArray(entries.subarray(cursor, cursor + size))\n      );\n\n      cursor += size;\n    }\n\n    {\n      const rows = outputLayerSize;\n      biases[i] = Matrix.fromRowMajorOrderEntries(\n        rows,\n        1,\n        toArray(entries.subarray(cursor, cursor + rows))\n      );\n\n      cursor += rows;\n    }\n  }\n\n  return networkFactory.fromWeightsAndBiases(weights, biases);\n}\n\nfunction toArray(floats: Float64Array): number[] {\n  const arr = new Array(floats.length);\n  for (let i = 0; i < floats.length; i++) {\n    arr[i] = floats[i];\n  }\n  return arr;\n}\n","import { AccuracyRate, LabeledImage } from \"../data\";\nimport { mnistProm } from \"../data/mnist\";\nimport { Network } from \"../network\";\nimport { deserializeNetwork } from \"../networkSerializer\";\nimport {\n  StartTestingRequest,\n  TestCompleteNotification,\n  WorkerMessageType,\n} from \"../workerMessages\";\n\ninterface Self {\n  postMessage(\n    message: TestCompleteNotification,\n    transfers?: Transferable[]\n  ): void;\n  addEventListener: Worker[\"addEventListener\"];\n}\n\ndeclare const self: Self;\n\nexport {};\n\nself.addEventListener(\"message\", (event) => {\n  const { data } = event;\n\n  if (data !== null && \"object\" === typeof data && \"messageType\" in data) {\n    const message: StartTestingRequest = data;\n    startTestingOnceMnistLoads(message);\n  }\n});\n\nfunction startTestingOnceMnistLoads(message: StartTestingRequest): void {\n  const network = deserializeNetwork(message.networkBuffer);\n  mnistProm.then((mnist) => {\n    startTesting(network, mnist.test);\n  });\n}\n\nfunction startTesting(network: Network, testData: LabeledImage[]): void {\n  const accuracyRate = network.test(testData);\n  notifyListenersOfTestCompletion(accuracyRate);\n}\n\nfunction notifyListenersOfTestCompletion(accuracyRate: AccuracyRate): void {\n  const message: TestCompleteNotification = {\n    messageType: WorkerMessageType.TestCompleteNotification,\n    accuracyRate,\n  };\n  self.postMessage(message);\n}\n"],"sourceRoot":""}